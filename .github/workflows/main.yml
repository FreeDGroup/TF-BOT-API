name: CI/CD Pipeline

on:
  push:
    branches: [ main ]


jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      # Step 1      
      - uses: actions/checkout@v2
      
      # Step 2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
          architecture: x64
      # Step 3
      - name: Install Python Virtual ENV
        uses: Gr1N/setup-poetry@v4  
        env:
          POETRY_VIRTUALENVS_PATH: ./virtualenvs/tf-bot-api
      # Step 4
      - name:  Setup Virtual env
        uses: actions/cache@v2
        id: cache-poetry
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
      - run: poetry --version
      # Step 5
      - name: Activate and Install Depencies into Virtual env
        run: |
          poetry install
        if: steps.cache-poetry.outputs.cache-hit != 'true'
      # Step 6
      # - name: Activate venv and Run Test        
      #   run: |
      #     poetry run pytest
      # Step 7
      - name: Create Zipfile archive of Dependencies
        run: |
          cd `poetry env info --path`
          cd lib/python3.8/site-packages
          zip -r9 ../../../../../../api.zip .
      
      # Step 8
      - name: Add App to Zip file
        run: zip -g ../api.zip -r .
      
      # Step 9
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [continuous-integration]
    if: github.ref == 'refs/heads/main'
    steps:
      # Step 1
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
      # Step 2
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      # Step 3
      - name: Upload to S3
        run: aws s3 cp api.zip s3://tf-bot-api/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2
      # Step 4
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name tf-bot-api --s3-bucket tf-bot-api --s3-key api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ap-northeast-2